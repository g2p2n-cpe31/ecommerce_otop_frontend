version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/ecommerce_otop_frontend
    steps:
      - checkout
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package-lock.json
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            # Fallback cache to be used
            - v1-npm-deps-
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Gatsby Build
          command: npm run build
      - run:
          name: Firebase Deployjest

          command: ./node_modules/.bin/firebase deploy --token "$FIREBASE_TOKEN"
# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/node:7.10

#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mongo:3.4.4
# working_directory: ~/repo
# steps:
#       # Checkout the code from the branch into the working_directory
#       - checkout
#       # Log the current branch
#       - run:
#           name: Show current branch
#           command: echo ${CIRCLE_BRANCH}
# # Download and cache dependencies
#       - restore_cache:
#           keys:
#           - v1-dependencies-{{ checksum "package.json" }}
#           # fallback to using the latest cache if no exact match is found
#           - v1-dependencies-
# - run: yarn install
# - save_cache:
#           paths:
#             - node_modules
#           key: v1-dependencies-{{ checksum "package.json" }}

#       # run tests!
#       - run: yarn test
#       - run: sudo apt-get update && sudo apt-get install -y python-dev
#       - run: sudo curl -O https://bootstrap.pypa.io/get-pip.py
#       - run: sudo python get-pip.py
#       - run: sudo pip install awscli --upgrade
#       - run: aws --version
#       - run: aws s3 ls
#       - run: yarn run deploy
